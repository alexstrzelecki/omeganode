version: "3.9"
services:
  traefik:
    image: "traefik:v2.10"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.cfresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.cfresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.cfresolver.acme.email=xhyq@proton.me"
      - "--certificatesresolvers.cfresolver.acme.storage=/letsencrypt/acme.json"

      # Cloudflare - Potential Race Condition - Disable Prop Check
      - "--certificatesResolvers.cfresolver.acme.dnsChallenge.delayBeforeCheck=60"
      - "--certificatesresolvers.cfresolver.acme.dnschallenge.disablepropagationcheck=true"

      # Testing / Setup - Use staging endpoint
      # - "--certificatesresolvers.cfresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    env_file:
      - ./.env
    volumes:
      - "/opt/appdata/traefik_config/:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      osmium-macvlan:
        ipv4_address: 10.10.10.125

  whoami:
    image: "traefik/whoami"
    container_name: "whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.rhombo.xyz`)"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=cfresolver"
    restart: unless-stopped
    networks:
      osmium-macvlan:
        ipv4_address: 10.10.10.126

networks:
  osmium-macvlan:
    external: true
  # traefik:
  #   external: true