version: "3.9"
services:
  homeassistant:
    image: lscr.io/linuxserver/homeassistant:latest
    container_name: homeassistant
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - /opt/appdata/homeassistant_config:/config
      - /var/run/dbus:/run/dbus:ro # required for bluetooth access (DBUS)
    ports:
      - 8123:8123
    dns:
      - 10.10.10.101
    restart: unless-stopped
    networks:
      osmium-macvlan:
        ipv4_address: 10.10.10.99
      curium-macvlan:
        ipv4_address: 192.168.254.220
      traefiknet:

  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    restart: unless-stopped
    ports:
        - 1883:1883
        - 9001:9001
    volumes:
        - /opt/appdata/mosquitto_config/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
        - /opt/appdata/mosquitto_config/config/:/mosquitto/config
        - /opt/appdata/mosquitto_config/data:/mosquitto/data/
        - /opt/log/mosquitto/:/mosquitto/log/
    networks:
      osmium-macvlan:
        ipv4_address: 10.10.10.98

  zigbee2mqtt:
    container_name: zigbee2mqtt
    restart: unless-stopped
    image: koenkk/zigbee2mqtt
    # group_add:
    #   - dialout
    # user: 1000:1000
    volumes:
      - /opt/appdata/zigbee2mqtt_config:/app/data
      - /run/udev:/run/udev:ro
    ports:
      - 8080:8080
    environment:
      - TZ=America/New_York
    devices:
      - /dev/serial/by-id/usb-ITEAD_SONOFF_Zigbee_3.0_USB_Dongle_Plus_V2_20231031192317-if00:/dev/ttyACM0
    networks:
      osmium-macvlan:
        ipv4_address: 10.10.10.105

  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared
    restart: unless-stopped
    command: tunnel run
    env_file: .env
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARED_TOKEN}
    networks:
      osmium-macvlan:
        ipv4_address: 10.10.10.102

  # node-red:
  #   build: .
  #   container_name: "node-red"
  #   environment:
  #     TZ: America/New_York
  #   image: "nodered/node-red"
  #   restart: unless-stopped
  #   ports:
  #     - "1880:1880"
  #   volumes:
  #     - "/opt/appdata/node-red_config/:/data"
  #   networks:
  #     osmium-macvlan:
  #       ipv4_address: 10.10.10.106

  postgres-ha:
    container_name: postgres-ha
    image: postgres:13
    restart: always
    env_file: .env
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - /opt/data/postgres-ha/:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      traefiknet:    

  influxdb-ha:
    container_name: influxdb-ha
    image: influxdb:2.7.5
    restart: unless-stopped
    volumes:
      - /opt/data/influxdb-ha/:/var/lib/influxdb2
      - /etc/localtime:/etc/localtime:ro
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.influx.tls=true'
      - "traefik.http.routers.influx.rule=Host(`influx.rhombo.xyz`)"
      - "traefik.http.routers.influx.entrypoints=websecure"
      - "traefik.http.routers.influx.tls.certresolver=cloudflare"
      - "traefik.http.services.influx.loadbalancer.server.port=8086"

    networks:
      - traefiknet

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    labels:
      - "traefik.enable=true"
      - 'traefik.http.routers.grafana.tls=true'
      - "traefik.http.routers.grafana.rule=Host(`stats.rhombo.xyz`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=cloudflare"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    volumes:
      - /opt/appdata/grafana_config/:/var/lib/grafana
    networks:
      - traefiknet

networks:
  osmium-macvlan:
    external: true
  curium-macvlan:
    external: true
  traefiknet:
    external: true