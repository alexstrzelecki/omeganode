version: "3.9"
services:
  # internal only radon network pihole 
  pihole-curium:
    # https://hackmd.io/@gushmazuko/SJdUS6gSF
    container_name: pihole-curium
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "80:80/tcp"
    environment:
      TZ: 'America/New_York'
      WEBPASSWORD: password
      ServerIP: 192.168.254.210
    volumes:
      - /opt/appdata/pihole-curium_config/etc/pihole/:/etc/pihole/
      - /opt/appdata/pihole-curium_config/etc/dnsmasq.d/:/etc/dnsmasq.d/
      - /opt/appdata/pihole-curium_config/backups/:/backups/

    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
    networks:
      curium-macvlan:
        ipv4_address: 192.168.254.210

  # can we add pihole to multiple macvlans networks?
  pihole-osmium:
    # https://hackmd.io/@gushmazuko/SJdUS6gSF
    container_name: pihole-osmium
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      # - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "80:80/tcp"
    environment:
      TZ: 'America/New_York'
      # WEBPASSWORD: password
      ServerIP: 10.10.10.101
    volumes:
      - /opt/appdata/pihole-osmium_config/etc/pihole/:/etc/pihole/
      - /opt/appdata/pihole-osmium_config/etc/dnsmasq.d/:/etc/dnsmasq.d/
      - /opt/appdata/pihole-osmium_config/backups/:/backups/

    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
    networks:
      osmium-macvlan:
        ipv4_address: 10.10.10.101

  dashy:
    image: lissy93/dashy
    container_name: dashy
    volumes:
      - /opt/appdata/dashy_config/dashy-config.yml:/app/public/conf.yml
    ports:
      - 4000:80
    environment:
      - NODE_ENV=production
      - UID=1000
      - GID=1000
    # Specify restart policy
    restart: unless-stopped
    # Configure healthchecks
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      osmium-macvlan: 
        ipv4_address: 10.10.10.103

  nextcloud:
    image: lscr.io/linuxserver/nextcloud:26.0.2-ls247
    container_name: nextcloud
    depends_on:
      - mariadb-nc
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - /opt/appdata/nextcloud_config:/config
      - /opt/data/nextcloud/storage:/data
    networks:
      - osmium-macvlan
    restart: unless-stopped

  mariadb-nc:
    image: lscr.io/linuxserver/mariadb:latest
    container_name: mariadb-nc
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      # - REMOTE_SQL=http://URL1/your.sql,https://URL2/your.sql #optional
    volumes:
      - /opt/appdata/mariadb-nc_config:/config
    networks:
      osmium-macvlan:
        ipv4_address: 10.10.10.112
    ports:
      - 3306:3306
    restart: unless-stopped

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      # - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
    volumes:
      - /opt/appdata/jellyfin_config:/config
      - /opt/appdata/jellyfin_config/plugins:/config/plugins
      - /opt/data/jellyfin/tv:/data/tv
      - /opt/data/jellyfin/movies:/data/movies
      - /opt/data/jellyfin/anime:/data/anime
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    networks:
      osmium-macvlan:
        ipv4_address: 10.10.10.113
    restart: unless-stopped

  photoprism:
    ## Use photoprism/photoprism:preview for testing preview builds:
    image: photoprism/photoprism:latest
    container_name: photoprism
    depends_on:
      - mariadb
    ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
    ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - "2342:2342" # HTTP port (host:container)
    environment:
      PHOTOPRISM_ADMIN_USER: "admin"                 # superadmin username
      PHOTOPRISM_ADMIN_PASSWORD: "insecure"          # initial superadmin password (minimum 8 characters)
      PHOTOPRISM_AUTH_MODE: "password"               # authentication mode (public, password)
      PHOTOPRISM_SITE_URL: "https://photos.rhombo.xyz:2342/"  # server URL in the format "http(s)://domain.name(:port)/(path)"
      PHOTOPRISM_ORIGINALS_LIMIT: 5000               # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
      PHOTOPRISM_READONLY: "false"                   # do not modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "false"              # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # disables face detection and recognition (requires TensorFlow)
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification (requires TensorFlow)
      PHOTOPRISM_DISABLE_RAW: "false"                # disables indexing and conversion of RAW files
      PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW files (reduces performance)
      PHOTOPRISM_JPEG_QUALITY: 100                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
      PHOTOPRISM_DETECT_NSFW: "false"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "insecure"       # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_CAPTION: "A repository for reality"
      PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
      PHOTOPRISM_SITE_AUTHOR: ""                     # meta site author

      # PUID: 1000
      # PGID: 1000
      # TZ: "America/New_York"

      ## Run/install on first startup (options: update https gpu tensorflow davfs clitools clean):
      # PHOTOPRISM_INIT: "https gpu tensorflow"
      ## Hardware Video Transcoding:
      # PHOTOPRISM_FFMPEG_ENCODER: "software"        # FFmpeg encoder ("software", "intel", "nvidia", "apple", "raspberry")
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)

      ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
      ## NOTE: Setting as 1000 will not work with default user 1000 for mounting nextcloud files
      # PHOTOPRISM_UID: 1000
      # PHOTOPRISM_GID: 1000
      # PHOTOPRISM_UMASK: 0000
    ## Start as non-root user before initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
    # user: "1000:1000"
    ## Share hardware devices with FFmpeg and TensorFlow (optional):
    # devices:
    #  - "/dev/dri:/dev/dri"                         # Intel QSV
    #  - "/dev/nvidia0:/dev/nvidia0"                 # Nvidia CUDA
    #  - "/dev/nvidiactl:/dev/nvidiactl"
    #  - "/dev/nvidia-modeset:/dev/nvidia-modeset"
    #  - "/dev/nvidia-nvswitchctl:/dev/nvidia-nvswitchctl"
    #  - "/dev/nvidia-uvm:/dev/nvidia-uvm"
    #  - "/dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools"
    #  - "/dev/video11:/dev/video11"                 # Video4Linux Video Encode Device (h264_v4l2m2m)
    working_dir: "/photoprism" # do not change or remove
    volumes:
      - /opt/data/photoprism/originals:/photoprism/originals  # Original media files (DO NOT REMOVE)
      - /opt/data/photoprism/storage:/photoprism/storage  # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)
      - /opt/data/photoprism/import:/photoprism/import/general
      - /opt/data/nextcloud/storage/alex/files/Photos/Sync/:/photoprism/import/sync
      # - /opt/appdata/photoprism_config:/photoprism/storage                  
      # - /opt/data/nextcloud/storage/alex/files/Photos/Art:/photoprism/originals/art  # read only
    networks:
      osmium-macvlan:
        ipv4_address: 10.10.10.114

  ## Database Server - For Photoprism
  ## see https://docs.photoprism.app/getting-started/faq/#should-i-use-sqlite-mariadb-or-mysql
  ## This has to be named mariadb otherwise Photoprism will not launch correctly
  mariadb:
    container_name: mariadb
    ## If MariaDB gets stuck in a restart loop, this points to a memory or filesystem issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: unless-stopped
    image: mariadb:10.10
    security_opt: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    ## Never store database files on an unreliable device such as a USB flash drive, an SD card, or a shared network folder:
    volumes:
      - /opt/appdata/mariadb-pp_config:/var/lib/mysql # DO NOT REMOVE
    environment:
      # MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      MARIADB_DATABASE: "photoprism"
      MARIADB_USER: "photoprism"
      MARIADB_PASSWORD: "insecure"
      MARIADB_ROOT_PASSWORD: "insecure"
      MARIADB_AUTO_UPGRADE: "true"
    networks:
      - osmium-macvlan

  trilium:
    container_name: trilium
    image: zadam/trilium:0.58-latest
    restart: always
    environment:
      - TRILIUM_DATA_DIR=/home/node/trilium-data
    ports:
      - "8080:8080"
    volumes:
      - /opt/appdata/trilium_config:/home/node/trilium-data
    networks:
      osmium-macvlan:
        ipv4_address: 10.10.10.115

  kopia:
    # See this for password issues in Kopia
    # https://github.com/kopia/kopia/issues/2370
    image: 'kopia/kopia:latest'
    container_name: kopia
    hostname: ${KOPIA_HOSTNAME}
    restart: unless-stopped
    env_file: .env
    command:
      - server
      - start
      - '--ui'
      - '--insecure'
      - '--disable-csrf-token-checks'
      - '--address=0.0.0.0:51515'
      - '--refresh-interval=24h'
      - '--server-username=${KOPIA_WEBUI_USER}@${KOPIA_HOSTNAME}'
      - '--server-password=${KOPIA_WEBUI_PASSWORD}' # This should be WEBUUI env var from host - not from environment section
    environment:
      - TZ=America/New_York
      - USER=${KOPIA_WEBUI_USER}
      - KOPIA_PASSWORD=${KOPIA_REPO_PASSWORD} # REPOSITORY PASSWORD
      - KOPIA_PERSIST_CREDENTIALS_ON_CONNECT=true
    volumes: 
      - /mnt/kopia:/tmp:shared # mounting spot for snapshots?
      # Operating volumes
      - /opt/appdata/kopia_config/config:/app/config
      - /opt/cache/kopia/:/app/cache
      - /opt/appdata/kopia_config/logs:/app/logs

      # Volumes to backup 
      - /opt/data/photoprism:/data/photoprism:ro
      - /opt/data/nextcloud:/data/nextcloud:ro
    networks:
      osmium-macvlan:
        ipv4_address: 10.10.10.109

secrets:
  # if 'external:true' is not set, then the name will change (e.g. dockerhost_nordvpn_user)
  nordvpn_user:
    file: /home/server/homeServer/credentials/nordvpn_user
    # external: true
  nordvpn_pw:
    file: /home/server/homeServer/credentials/nordvpn_pw
    # external: true
  kopia_repo_pw:
    file: /home/server/homeServer/credentials/kopia_repo_pw
    # external: true
  kopia_webui_pw:
    file: /home/server/homeServer/credentials/kopia_webui_pw
    # external: true
  photoprism_admin_pw:
    file: /home/server/homeServer/credentials/photoprism_admin_pw
    # external: true
  nordvpn_private_key:
    file: /home/server/homeServer/credentials/nordvpn_private_key
    # external: true
  cloudflare_email:
    file: /home/server/homeServer/credentials/cloudflare_email
  cloudflare_api_key:
    file: /home/server/homeServer/credentials/cloudflare_api_key
  cloudflare_dns_api_token:
    file: /home/server/homeServer/credentials/cloudflare_dns_api_token

networks:
  curium-macvlan:
    external: true

  osmium-macvlan:
    external: true