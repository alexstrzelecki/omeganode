version: "3"
services:
  traefik:
    image: traefik:v2.9.6             # Review traefik documentation https://doc.traefik.io/traefik/ # stable version 2.9.6, old 2.4
    container_name: traefik
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls.certresolver=letsencrypt
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --certificatesresolvers.letsencrypt.acme.email=kappaoctantis@protonmail.com # Replace with your email
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --serverstransport.insecureskipverify=true # skipping verification of self-signed?

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.service.rule=Host(`rhombo.xyz`)"
      - "traefik.http.routers.service.entrypoints=websecure"
      - "traefik.http.routers.service.tls.certresolver=myresolver"
      
      # Defining middleware 
      - "traefik.http.middlewares.servicests.headers.stsincludesubdomains=false"
      - "traefik.http.middlewares.servicests.headers.stspreload=true"
      - "traefik.http.middlewares.servicests.headers.stsseconds=31536000"
      - "traefik.http.middlewares.servicests.headers.isdevelopment=false"
      - "traefik.http.routers.service.middlewares=servicests"
    ports:
      - 80:80
      - 443:443
      - 8081:8081 # normally 8080
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik-servicenet
    restart: unless-stopped

  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.services.portainer.loadbalancer.server.port=9000
      - traefik.http.routers.portainer.rule=Host(`port.rhombo.xyz`) 
    ports:
      - "9000:9000/tcp"
    environment:
      - TZ=America/New_York
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/appdata/portainer_config:/data
    networks:
      - traefik-servicenet

  # ddclient:
  #   image: lscr.io/linuxserver/ddclient:latest
  #   container_name: ddclient
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=America/New_York
  #   volumes:
  #     - /opt/appdata/ddclient_config:/config
  #   networks:
  #     - traefik-servicenet
  #   restart: unless-stopped 

  nextcloud:
    image: lscr.io/linuxserver/nextcloud:latest
    container_name: nextcloud
    depends_on:
      - mariadb-nc
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`cloud.rhombo.xyz`)"
      - "traefik.http.routers.nextcloud.entrypoints=websecure"
      - "traefik.http.routers.nextcloud.tls.certresolver=myresolver"

      # Assigning middleware
      - "traefik.http.middlewares.nextcloudredir.redirectregex.permanent=true"
      - "traefik.http.middlewares.nextcloudredir.redirectregex.regex=https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.nextcloudredir.redirectregex.replacement=https://$$1/remote.php/dav/"
      - "traefik.http.middlewares.nextcloudsts.headers.stsincludesubdomains=false"
      - "traefik.http.middlewares.nextcloudsts.headers.stspreload=true"
      - "traefik.http.middlewares.nextcloudsts.headers.stsseconds=31536000"
      - "traefik.http.middlewares.nextcloudsts.headers.isdevelopment=false"
      - "traefik.http.routers.nextcloud.middlewares=nextcloudredir,nextcloudsts"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - /opt/appdata/nextcloud_config:/config
      - /opt/data/nextcloud/storage:/data
    networks:
      - traefik-servicenet
    restart: unless-stopped

  mariadb-nc:
    image: lscr.io/linuxserver/mariadb:latest
    container_name: mariadb-nc
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      # - REMOTE_SQL=http://URL1/your.sql,https://URL2/your.sql #optional
    volumes:
      - /opt/appdata/mariadb-nc_config:/config
    networks:
      - traefik-servicenet
    ports:
      - 3306:3306
    restart: unless-stopped

  # pihole:
  #   # https://hackmd.io/@gushmazuko/SJdUS6gSF
  #   container_name: pihole
  #   image: pihole/pihole:latest
  #   # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
  #   ports:
  #     - "53:53/tcp"
  #     - "53:53/udp"
  #     - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
  #     - "80:80/tcp"
  #   environment:
  #     TZ: 'America/Chicago'
  #     # WEBPASSWORD: 'set a secure password here or it will be random'
  #   # Volumes store your data between container upgrades
  #   volumes:
  #     - './etc-pihole:/etc/pihole'
  #     - './etc-dnsmasq.d:/etc/dnsmasq.d'
  #   #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
  #   cap_add:
  #     - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
  #   restart: unless-stopped

  plex-audio:
    image: linuxserver/plex
    container_name: plex-audio
    labels:
      - traefik.enable=true
      - traefik.http.services.plex-audio.loadbalancer.server.port=32400
      - traefik.http.routers.plex-audio.rule=Host(`audio.rhombo.xyz`)
    environment:
      - PLEX_CLAIM=claim-MoJmu8ze-irnd4PjKunK
      - ADVERTISE_IP=https://audio.rhombo.xyz:443/ # insert local ip here if on local network
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - /opt/appdata/plex-audio_config:/config
      - /opt/data/nextcloud/storage/alex/files/Audiobooks/External:/audiobooks
    networks:
      - traefik-servicenet
    restart: unless-stopped

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      # - JELLYFIN_PublishedServerUrl=192.168.0.5 #optional
    labels:
      - traefik.enable=true
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
      - traefik.http.routers.jellyfin.rule=Host(`stream.rhombo.xyz`)
    volumes:
      - /opt/appdata/jellyfin_config:/config
      - /opt/data/jellyfin/tv:/data/tv
      - /opt/data/jellyfin/movies:/data/movies
      - /opt/data/jellyfin/anime:/data/anime
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    networks:
      - traefik-servicenet
    restart: unless-stopped

  # webtop:
  #   # image: lscr.io/linuxserver/webtop:latest
  #   image: linuxserver/webtop
  #   # user: "1000"
  #   container_name: webtop
  #   security_opt:
  #     - seccomp:unconfined #optional
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=America/New_York
  #     # - SUBFOLDER=/ #optional
  #     # - KEYBOARD=en-us-qwerty #optional
  #     - TITLE=Webtop #optional
  #   volumes:
  #     - /opt/appdata/webtop_config:/config
  #     - /var/run/docker.sock:/var/run/docker.sock #optional
  #   ports:
  #     - 3000:3000
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.services.webtop.loadbalancer.server.port=3000
  #     - traefik.http.routers.webtop.rule=Host(`ha.rhombo.xyz`)   # Replace with your domain
  #   shm_size: "1gb" #optional
  #   restart: unless-stopped
  #   networks:
  #     - traefik-servicenet

  photoprism:
    ## Use photoprism/photoprism:preview for testing preview builds:
    image: photoprism/photoprism:latest
    container_name: photoprism
    depends_on:
      - mariadb
    ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
    ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    # restart: unless-stopped
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - "2342:2342" # HTTP port (host:container)
    environment:
      PHOTOPRISM_ADMIN_USER: "admin"                 # superadmin username
      PHOTOPRISM_ADMIN_PASSWORD: "insecure"          # initial superadmin password (minimum 8 characters)
      PHOTOPRISM_AUTH_MODE: "password"               # authentication mode (public, password)
      PHOTOPRISM_SITE_URL: "https://photos.rhombo.xyz:2342/"  # server URL in the format "http(s)://domain.name(:port)/(path)"
      PHOTOPRISM_ORIGINALS_LIMIT: 5000               # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip"            # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_LOG_LEVEL: "info"                   # log level: trace, debug, info, warning, error, fatal, or panic
      PHOTOPRISM_READONLY: "false"                   # do not modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false"               # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "false"              # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_WEBDAV: "false"             # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false"           # disables settings UI and API
      PHOTOPRISM_DISABLE_TENSORFLOW: "false"         # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false"              # disables face detection and recognition (requires TensorFlow)
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false"     # disables image classification (requires TensorFlow)
      PHOTOPRISM_DISABLE_RAW: "false"                # disables indexing and conversion of RAW files
      PHOTOPRISM_RAW_PRESETS: "false"                # enables applying user presets when converting RAW files (reduces performance)
      PHOTOPRISM_JPEG_QUALITY: 100                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
      PHOTOPRISM_DETECT_NSFW: "false"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "mariadb:3306"     # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism"         # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism"         # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "insecure"       # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_CAPTION: "A repository for reality"
      PHOTOPRISM_SITE_DESCRIPTION: ""                # meta site description
      PHOTOPRISM_SITE_AUTHOR: ""                     # meta site author

      # PUID: 1000
      # PGID: 1000
      # TZ: "America/New_York"

      ## Run/install on first startup (options: update https gpu tensorflow davfs clitools clean):
      # PHOTOPRISM_INIT: "https gpu tensorflow"
      ## Hardware Video Transcoding:
      # PHOTOPRISM_FFMPEG_ENCODER: "software"        # FFmpeg encoder ("software", "intel", "nvidia", "apple", "raspberry")
      # PHOTOPRISM_FFMPEG_BITRATE: "32"              # FFmpeg encoding bitrate limit in Mbit/s (default: 50)

      ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
      ## NOTE: Setting as 1000 will not work with default user 1000 for mounting nextcloud files
      # PHOTOPRISM_UID: 1000
      # PHOTOPRISM_GID: 1000
      # PHOTOPRISM_UMASK: 0000
    ## Start as non-root user before initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
    # user: "1000:1000"
    ## Share hardware devices with FFmpeg and TensorFlow (optional):
    # devices:
    #  - "/dev/dri:/dev/dri"                         # Intel QSV
    #  - "/dev/nvidia0:/dev/nvidia0"                 # Nvidia CUDA
    #  - "/dev/nvidiactl:/dev/nvidiactl"
    #  - "/dev/nvidia-modeset:/dev/nvidia-modeset"
    #  - "/dev/nvidia-nvswitchctl:/dev/nvidia-nvswitchctl"
    #  - "/dev/nvidia-uvm:/dev/nvidia-uvm"
    #  - "/dev/nvidia-uvm-tools:/dev/nvidia-uvm-tools"
    #  - "/dev/video11:/dev/video11"                 # Video4Linux Video Encode Device (h264_v4l2m2m)
    working_dir: "/photoprism" # do not change or remove
    volumes:
      - /opt/data/photoprism/originals:/photoprism/originals  # Original media files (DO NOT REMOVE)
      - /opt/data/photoprism/storage:/photoprism/storage  # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)
      - /opt/data/photoprism/import:/photoprism/import
      # - /opt/appdata/photoprism_config:/photoprism/storage                  
      # - /opt/data/nextcloud/storage/alex/files/Photos/Art:/photoprism/originals/art  # read only
    labels:
      - traefik.enable=true
      - traefik.http.services.photoprism.loadbalancer.server.port=2342
      - traefik.http.routers.photoprism.rule=Host(`photos.rhombo.xyz`) 
    networks:
      - traefik-servicenet


  ## Database Server - For Photoprism
  ## see https://docs.photoprism.app/getting-started/faq/#should-i-use-sqlite-mariadb-or-mysql
  ## This has to be named mariadb otherwise Photoprism will not launch correctly
  mariadb:
    container_name: mariadb
    ## If MariaDB gets stuck in a restart loop, this points to a memory or filesystem issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: unless-stopped
    image: mariadb:10.10
    security_opt: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    ## Never store database files on an unreliable device such as a USB flash drive, an SD card, or a shared network folder:
    volumes:
      - /opt/appdata/mariadb-pp_config:/var/lib/mysql # DO NOT REMOVE
    environment:
      MARIADB_AUTO_UPGRADE: "1"
      MARIADB_INITDB_SKIP_TZINFO: "1"
      MARIADB_DATABASE: "photoprism"
      MARIADB_USER: "photoprism"
      MARIADB_PASSWORD: "insecure"
      MARIADB_ROOT_PASSWORD: "insecure"
      MARIADB_AUTO_UPGRADE: "true"
    networks:
      - traefik-servicenet

  trilium:
    container_name: trilium
    image: zadam/trilium:0.58-latest
    restart: always
    environment:
      - TRILIUM_DATA_DIR=/home/node/trilium-data
    ports:
      - "8080:8080"
    volumes:
      - /opt/appdata/trilium_config:/home/node/trilium-data
    labels:
      - traefik.enable=true
      - traefik.http.services.trilium.loadbalancer.server.port=8080
      - traefik.http.routers.trilium.rule=Host(`notes.rhombo.xyz`)
    networks:
      - traefik-servicenet

  kopia:
    # https://github.com/kopia/kopia/blob/master/tools/docker/docker-compose.yml
    image: kopia/kopia:latest
    container_name: kopia
    # user: "0:0"
    restart: unless-stopped
    hostname: kopia
    entrypoint: ["kopia", "server", "--insecure", "--address=0.0.0.0:51515", "--refresh-interval=24h", "--override-username=server", "--server-username=server", "--server-password=EFo9den3RZ3gtCbNbxsQcTNMr5kyHeERqLyz"]    
    # privileged: true
    # cap_add:
      # - SYS_ADMIN
    # security_opt:
    #   - apparmor:unconfined
    # devices:
    #   - /dev/fuse:/dev/fuse:rwm
    # command:
    #   - server
    #   - start
    #   # - --disable-csrf-token-checks
    #   # - --tls-cert-file=/data/home/XXX/ssl-certs/fullchain.pem
    #   # - --tls-key-file=/data/home/XXX/ssl-certs/privkey.pem
    #   # - --address=0.0.0.0:51515
    #   - --server-username=server
    #   - --server-password=EFo9den3RZ3gtCbNbxsQcTNMr5kyHeERqLyz
    #   - --refresh-interval=24h # prevent Class C transaction cap hit in B2
    volumes:
      - /mnt/kopia:/tmp:shared # check to see if this will work
      # - /home/XXX/docker/Kopia-Ubuntu/config:/app/config
      # - /home/XXX/docker/Kopia-Ubuntu/cache:/app/cache
      # - /home/XXX/docker/Kopia-Ubuntu/logs:/app/logs
      - /opt/appdata/kopia_config/config:/app/config
      # - /opt/appdata/kopia_config/cache:/app/cache
      - /opt/cache/config:/app/cache
      - /opt/appdata/kopia_config/logs:/app/logs

      # - /:/data:ro
      - /opt/data/photoprism:/data/photoprism:ro
      - /opt/data/nextcloud:/data/nextcloud:ro
    environment:
      # KOPIA_PASSWORD: xuDb2tyjY9k2FK3NfVJcXH3qH4kxR3437
      TZ: America/New_York
      # USER: root
      # - UID: 1000
      # - GUD: 1000      
    labels:
      - traefik.enable=true
      - traefik.http.services.kopia.loadbalancer.server.port=51515
      - traefik.http.routers.kopia.rule=Host(`backup.rhombo.xyz`)
    networks:
      - traefik-servicenet

  ## Watchtower upgrades services automatically (optional)
  ## see https://docs.photoprism.app/getting-started/updates/#watchtower
  ## activate via "COMPOSE_PROFILES=update docker compose up -d"
  # watchtower:
  #   restart: unless-stopped
  #   image: containrrr/watchtower
  #   profiles: ["update"]
  #   environment:
  #     WATCHTOWER_CLEANUP: "true"
  #     WATCHTOWER_POLL_INTERVAL: 7200 # checks for updates every two hours
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock"
      # - "~/.docker/config.json:/config.json" # optional, for authentication if you have a Docker Hub account

  # firefox:
  #   image: lscr.io/linuxserver/firefox:latest
  #   container_name: firefox
  #   security_opt:
  #     - seccomp:unconfined #optional
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.services.firefox.loadbalancer.server.port=3000
  #     - traefik.http.routers.firefox.rule=Host(`ff.rhombo.xyz`) 
  #   environment:
  #     - PUID=1000
  #     - PGID=1000
  #     - TZ=America/New_York
  #   volumes:
  #     - /opt/appdata/firefox_config:/config
  #   ports:
  #     - 3000:3000
  #   shm_size: "1gb"
  #   restart: unless-stopped
  #   networks:
  #     - traefik-servicenet

  # whoami:
  #   image: traefik/whoami:latest
  #   restart: unless-stopped
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.whoami.entrypoints=web-secure"
  #     - "traefik.http.routers.whoami.rule=Host(`whoami.example.invalid`)" # change hostname!
  #     - "traefik.http.routers.whoami.tls=true"
  #     - "traefik.http.routers.whoami.tls.certresolver=tlschallenge"
  #     - "traefik.http.routers.whoami.middlewares=secHeaders@file"
  #     - "traefik.http.services.whoami.loadbalancer.server.port=80" # set port the container listenes to
  #   networks:
  #     - traefik-servicenet

networks:
  traefik-servicenet:
    external: true
    name: traefik-servicenet # create this network before running this deployment:
                             # docker network create traefik-servicenet